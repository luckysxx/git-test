
5.1：     文件格式 elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 e1 2f 00 00 	mov    0x2fe1(%rip),%rax        # 3ff0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 72 2f 00 00    	push   0x2f72(%rip)        # 3f98 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 74 2f 00 00    	jmp    *0x2f74(%rip)        # 3fa0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)
    1030:	f3 0f 1e fa          	endbr64
    1034:	68 00 00 00 00       	push   $0x0
    1039:	e9 e2 ff ff ff       	jmp    1020 <_init+0x20>
    103e:	66 90                	xchg   %ax,%ax
    1040:	f3 0f 1e fa          	endbr64
    1044:	68 01 00 00 00       	push   $0x1
    1049:	e9 d2 ff ff ff       	jmp    1020 <_init+0x20>
    104e:	66 90                	xchg   %ax,%ax
    1050:	f3 0f 1e fa          	endbr64
    1054:	68 02 00 00 00       	push   $0x2
    1059:	e9 c2 ff ff ff       	jmp    1020 <_init+0x20>
    105e:	66 90                	xchg   %ax,%ax
    1060:	f3 0f 1e fa          	endbr64
    1064:	68 03 00 00 00       	push   $0x3
    1069:	e9 b2 ff ff ff       	jmp    1020 <_init+0x20>
    106e:	66 90                	xchg   %ax,%ax
    1070:	f3 0f 1e fa          	endbr64
    1074:	68 04 00 00 00       	push   $0x4
    1079:	e9 a2 ff ff ff       	jmp    1020 <_init+0x20>
    107e:	66 90                	xchg   %ax,%ax
    1080:	f3 0f 1e fa          	endbr64
    1084:	68 05 00 00 00       	push   $0x5
    1089:	e9 92 ff ff ff       	jmp    1020 <_init+0x20>
    108e:	66 90                	xchg   %ax,%ax

Disassembly of section .plt.got:

0000000000001090 <__cxa_finalize@plt>:
    1090:	f3 0f 1e fa          	endbr64
    1094:	ff 25 3e 2f 00 00    	jmp    *0x2f3e(%rip)        # 3fd8 <__cxa_finalize@GLIBC_2.2.5>
    109a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010a0 <printf@plt>:
    10a0:	f3 0f 1e fa          	endbr64
    10a4:	ff 25 fe 2e 00 00    	jmp    *0x2efe(%rip)        # 3fa8 <printf@GLIBC_2.2.5>
    10aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000010b0 <fork@plt>:
    10b0:	f3 0f 1e fa          	endbr64
    10b4:	ff 25 f6 2e 00 00    	jmp    *0x2ef6(%rip)        # 3fb0 <fork@GLIBC_2.2.5>
    10ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000010c0 <_ZNSirsERi@plt>:
    10c0:	f3 0f 1e fa          	endbr64
    10c4:	ff 25 ee 2e 00 00    	jmp    *0x2eee(%rip)        # 3fb8 <_ZNSirsERi@GLIBCXX_3.4>
    10ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000010d0 <__stack_chk_fail@plt>:
    10d0:	f3 0f 1e fa          	endbr64
    10d4:	ff 25 e6 2e 00 00    	jmp    *0x2ee6(%rip)        # 3fc0 <__stack_chk_fail@GLIBC_2.4>
    10da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000010e0 <exit@plt>:
    10e0:	f3 0f 1e fa          	endbr64
    10e4:	ff 25 de 2e 00 00    	jmp    *0x2ede(%rip)        # 3fc8 <exit@GLIBC_2.2.5>
    10ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000010f0 <fwrite@plt>:
    10f0:	f3 0f 1e fa          	endbr64
    10f4:	ff 25 d6 2e 00 00    	jmp    *0x2ed6(%rip)        # 3fd0 <fwrite@GLIBC_2.2.5>
    10fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001100 <_start>:
    1100:	f3 0f 1e fa          	endbr64
    1104:	31 ed                	xor    %ebp,%ebp
    1106:	49 89 d1             	mov    %rdx,%r9
    1109:	5e                   	pop    %rsi
    110a:	48 89 e2             	mov    %rsp,%rdx
    110d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1111:	50                   	push   %rax
    1112:	54                   	push   %rsp
    1113:	45 31 c0             	xor    %r8d,%r8d
    1116:	31 c9                	xor    %ecx,%ecx
    1118:	48 8d 3d ca 00 00 00 	lea    0xca(%rip),%rdi        # 11e9 <main>
    111f:	ff 15 bb 2e 00 00    	call   *0x2ebb(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.34>
    1125:	f4                   	hlt
    1126:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    112d:	00 00 00 

0000000000001130 <deregister_tm_clones>:
    1130:	48 8d 3d d9 2e 00 00 	lea    0x2ed9(%rip),%rdi        # 4010 <__TMC_END__>
    1137:	48 8d 05 d2 2e 00 00 	lea    0x2ed2(%rip),%rax        # 4010 <__TMC_END__>
    113e:	48 39 f8             	cmp    %rdi,%rax
    1141:	74 15                	je     1158 <deregister_tm_clones+0x28>
    1143:	48 8b 05 9e 2e 00 00 	mov    0x2e9e(%rip),%rax        # 3fe8 <_ITM_deregisterTMCloneTable@Base>
    114a:	48 85 c0             	test   %rax,%rax
    114d:	74 09                	je     1158 <deregister_tm_clones+0x28>
    114f:	ff e0                	jmp    *%rax
    1151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1158:	c3                   	ret
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <register_tm_clones>:
    1160:	48 8d 3d a9 2e 00 00 	lea    0x2ea9(%rip),%rdi        # 4010 <__TMC_END__>
    1167:	48 8d 35 a2 2e 00 00 	lea    0x2ea2(%rip),%rsi        # 4010 <__TMC_END__>
    116e:	48 29 fe             	sub    %rdi,%rsi
    1171:	48 89 f0             	mov    %rsi,%rax
    1174:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1178:	48 c1 f8 03          	sar    $0x3,%rax
    117c:	48 01 c6             	add    %rax,%rsi
    117f:	48 d1 fe             	sar    $1,%rsi
    1182:	74 14                	je     1198 <register_tm_clones+0x38>
    1184:	48 8b 05 6d 2e 00 00 	mov    0x2e6d(%rip),%rax        # 3ff8 <_ITM_registerTMCloneTable@Base>
    118b:	48 85 c0             	test   %rax,%rax
    118e:	74 08                	je     1198 <register_tm_clones+0x38>
    1190:	ff e0                	jmp    *%rax
    1192:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1198:	c3                   	ret
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <__do_global_dtors_aux>:
    11a0:	f3 0f 1e fa          	endbr64
    11a4:	80 3d ad 2f 00 00 00 	cmpb   $0x0,0x2fad(%rip)        # 4158 <completed.0>
    11ab:	75 2b                	jne    11d8 <__do_global_dtors_aux+0x38>
    11ad:	55                   	push   %rbp
    11ae:	48 83 3d 22 2e 00 00 	cmpq   $0x0,0x2e22(%rip)        # 3fd8 <__cxa_finalize@GLIBC_2.2.5>
    11b5:	00 
    11b6:	48 89 e5             	mov    %rsp,%rbp
    11b9:	74 0c                	je     11c7 <__do_global_dtors_aux+0x27>
    11bb:	48 8b 3d 46 2e 00 00 	mov    0x2e46(%rip),%rdi        # 4008 <__dso_handle>
    11c2:	e8 c9 fe ff ff       	call   1090 <__cxa_finalize@plt>
    11c7:	e8 64 ff ff ff       	call   1130 <deregister_tm_clones>
    11cc:	c6 05 85 2f 00 00 01 	movb   $0x1,0x2f85(%rip)        # 4158 <completed.0>
    11d3:	5d                   	pop    %rbp
    11d4:	c3                   	ret
    11d5:	0f 1f 00             	nopl   (%rax)
    11d8:	c3                   	ret
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011e0 <frame_dummy>:
    11e0:	f3 0f 1e fa          	endbr64
    11e4:	e9 77 ff ff ff       	jmp    1160 <register_tm_clones>

00000000000011e9 <main>:
    11e9:	f3 0f 1e fa          	endbr64
    11ed:	55                   	push   %rbp
    11ee:	48 89 e5             	mov    %rsp,%rbp
    11f1:	48 83 ec 20          	sub    $0x20,%rsp
    11f5:	89 7d ec             	mov    %edi,-0x14(%rbp)
    11f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    11fc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1203:	00 00 
    1205:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1209:	31 c0                	xor    %eax,%eax
    120b:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    120f:	48 89 c6             	mov    %rax,%rsi
    1212:	48 8d 05 27 2e 00 00 	lea    0x2e27(%rip),%rax        # 4040 <_ZSt3cin@GLIBCXX_3.4>
    1219:	48 89 c7             	mov    %rax,%rdi
    121c:	e8 9f fe ff ff       	call   10c0 <_ZNSirsERi@plt>
    1221:	e8 8a fe ff ff       	call   10b0 <fork@plt>
    1226:	89 45 f4             	mov    %eax,-0xc(%rbp)
    1229:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    122d:	79 2d                	jns    125c <main+0x73>
    122f:	48 8b 05 ea 2d 00 00 	mov    0x2dea(%rip),%rax        # 4020 <stderr@GLIBC_2.2.5>
    1236:	48 89 c1             	mov    %rax,%rcx
    1239:	ba 0c 00 00 00       	mov    $0xc,%edx
    123e:	be 01 00 00 00       	mov    $0x1,%esi
    1243:	48 8d 05 ba 0d 00 00 	lea    0xdba(%rip),%rax        # 2004 <_IO_stdin_used+0x4>
    124a:	48 89 c7             	mov    %rax,%rdi
    124d:	e8 9e fe ff ff       	call   10f0 <fwrite@plt>
    1252:	bf 01 00 00 00       	mov    $0x1,%edi
    1257:	e8 84 fe ff ff       	call   10e0 <exit@plt>
    125c:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    1260:	75 24                	jne    1286 <main+0x9d>
    1262:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1265:	83 c0 0a             	add    $0xa,%eax
    1268:	89 45 f0             	mov    %eax,-0x10(%rbp)
    126b:	8b 45 f0             	mov    -0x10(%rbp),%eax
    126e:	89 c6                	mov    %eax,%esi
    1270:	48 8d 05 9a 0d 00 00 	lea    0xd9a(%rip),%rax        # 2011 <_IO_stdin_used+0x11>
    1277:	48 89 c7             	mov    %rax,%rdi
    127a:	b8 00 00 00 00       	mov    $0x0,%eax
    127f:	e8 1c fe ff ff       	call   10a0 <printf@plt>
    1284:	eb 22                	jmp    12a8 <main+0xbf>
    1286:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1289:	83 c0 64             	add    $0x64,%eax
    128c:	89 45 f0             	mov    %eax,-0x10(%rbp)
    128f:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1292:	89 c6                	mov    %eax,%esi
    1294:	48 8d 05 76 0d 00 00 	lea    0xd76(%rip),%rax        # 2011 <_IO_stdin_used+0x11>
    129b:	48 89 c7             	mov    %rax,%rdi
    129e:	b8 00 00 00 00       	mov    $0x0,%eax
    12a3:	e8 f8 fd ff ff       	call   10a0 <printf@plt>
    12a8:	b8 00 00 00 00       	mov    $0x0,%eax
    12ad:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    12b1:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    12b8:	00 00 
    12ba:	74 05                	je     12c1 <main+0xd8>
    12bc:	e8 0f fe ff ff       	call   10d0 <__stack_chk_fail@plt>
    12c1:	c9                   	leave
    12c2:	c3                   	ret

Disassembly of section .fini:

00000000000012c4 <_fini>:
    12c4:	f3 0f 1e fa          	endbr64
    12c8:	48 83 ec 08          	sub    $0x8,%rsp
    12cc:	48 83 c4 08          	add    $0x8,%rsp
    12d0:	c3                   	ret
